//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmailLaunchTest.LaunchSvc {
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LaunchManagementServicePortBinding", Namespace="http://launch.v81.api.keysurvey.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSObject))]
    public partial class LaunchManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getMasterUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUrlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmailRemindersOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmailReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmailReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmailReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEmailReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutofillDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFormEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendUniqueUrlByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDefaultUrlTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultUrlTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUrlSendingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIncompleteEmailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUrlByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback publishOnParticipantPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPortalResponseSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPortalResponseSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDataFlowSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataFlowSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFormVisibilityOnPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormVisibilityOnPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendUniqueURLsToCMListOperationCompleted;
        
        private System.Threading.SendOrPostCallback lockAccessToContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback isFormPublishedToPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVotingLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendUniqueUrlWithAutofillByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUrlWithAutofillByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback passwordProtectWithAutofillOperationCompleted;
        
        private System.Threading.SendOrPostCallback publishOnParticipantPortalWithNewFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendUniqueURLsToCMListForNewFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback passwordProtectionThroughContactManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback passwordProtectionThroughContactManagerForNewFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFormTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormTagOperationCompleted;
        
        /// <remarks/>
        public LaunchManagement() {
            this.Url = "https://app.form.com:443/Member/api/v81/launch/LaunchManagementService";
        }
        
        public LaunchManagement(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        public event getMasterUrlCompletedEventHandler getMasterUrlCompleted;
        
        /// <remarks/>
        public event getUniqueUrlCompletedEventHandler getUniqueUrlCompleted;
        
        /// <remarks/>
        public event getUniqueUrlsCompletedEventHandler getUniqueUrlsCompleted;
        
        /// <remarks/>
        public event getEmailRemindersCompletedEventHandler getEmailRemindersCompleted;
        
        /// <remarks/>
        public event createEmailReminderCompletedEventHandler createEmailReminderCompleted;
        
        /// <remarks/>
        public event updateEmailReminderCompletedEventHandler updateEmailReminderCompleted;
        
        /// <remarks/>
        public event getEmailReminderCompletedEventHandler getEmailReminderCompleted;
        
        /// <remarks/>
        public event deleteEmailReminderCompletedEventHandler deleteEmailReminderCompleted;
        
        /// <remarks/>
        public event getAutofillDataCompletedEventHandler getAutofillDataCompleted;
        
        /// <remarks/>
        public event setFormEmailTemplateCompletedEventHandler setFormEmailTemplateCompleted;
        
        /// <remarks/>
        public event getFormEmailTemplateCompletedEventHandler getFormEmailTemplateCompleted;
        
        /// <remarks/>
        public event sendUniqueUrlByEmailCompletedEventHandler sendUniqueUrlByEmailCompleted;
        
        /// <remarks/>
        public event setDefaultUrlTypeCompletedEventHandler setDefaultUrlTypeCompleted;
        
        /// <remarks/>
        public event getDefaultUrlTypeCompletedEventHandler getDefaultUrlTypeCompleted;
        
        /// <remarks/>
        public event getUniqueUrlSendingStatusCompletedEventHandler getUniqueUrlSendingStatusCompleted;
        
        /// <remarks/>
        public event getIncompleteEmailsCompletedEventHandler getIncompleteEmailsCompleted;
        
        /// <remarks/>
        public event getUniqueUrlByEmailCompletedEventHandler getUniqueUrlByEmailCompleted;
        
        /// <remarks/>
        public event publishOnParticipantPortalCompletedEventHandler publishOnParticipantPortalCompleted;
        
        /// <remarks/>
        public event setPortalResponseSettingsCompletedEventHandler setPortalResponseSettingsCompleted;
        
        /// <remarks/>
        public event getPortalResponseSettingsCompletedEventHandler getPortalResponseSettingsCompleted;
        
        /// <remarks/>
        public event setDataFlowSettingsCompletedEventHandler setDataFlowSettingsCompleted;
        
        /// <remarks/>
        public event getDataFlowSettingsCompletedEventHandler getDataFlowSettingsCompleted;
        
        /// <remarks/>
        public event setFormVisibilityOnPortalCompletedEventHandler setFormVisibilityOnPortalCompleted;
        
        /// <remarks/>
        public event getFormVisibilityOnPortalCompletedEventHandler getFormVisibilityOnPortalCompleted;
        
        /// <remarks/>
        public event sendUniqueURLsToCMListCompletedEventHandler sendUniqueURLsToCMListCompleted;
        
        /// <remarks/>
        public event lockAccessToContactCompletedEventHandler lockAccessToContactCompleted;
        
        /// <remarks/>
        public event isFormPublishedToPortalCompletedEventHandler isFormPublishedToPortalCompleted;
        
        /// <remarks/>
        public event getVotingLinkCompletedEventHandler getVotingLinkCompleted;
        
        /// <remarks/>
        public event sendUniqueUrlWithAutofillByEmailCompletedEventHandler sendUniqueUrlWithAutofillByEmailCompleted;
        
        /// <remarks/>
        public event getUniqueUrlWithAutofillByEmailCompletedEventHandler getUniqueUrlWithAutofillByEmailCompleted;
        
        /// <remarks/>
        public event passwordProtectWithAutofillCompletedEventHandler passwordProtectWithAutofillCompleted;
        
        /// <remarks/>
        public event publishOnParticipantPortalWithNewFilterCompletedEventHandler publishOnParticipantPortalWithNewFilterCompleted;
        
        /// <remarks/>
        public event sendUniqueURLsToCMListForNewFilterCompletedEventHandler sendUniqueURLsToCMListForNewFilterCompleted;
        
        /// <remarks/>
        public event passwordProtectionThroughContactManagerCompletedEventHandler passwordProtectionThroughContactManagerCompleted;
        
        /// <remarks/>
        public event passwordProtectionThroughContactManagerForNewFilterCompletedEventHandler passwordProtectionThroughContactManagerForNewFilterCompleted;
        
        /// <remarks/>
        public event setFormTagCompletedEventHandler setFormTagCompleted;
        
        /// <remarks/>
        public event getFormTagCompletedEventHandler getFormTagCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getMasterUrl([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified) {
            object[] results = this.Invoke("getMasterUrl", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMasterUrlAsync(long formId, WSUrlType urlType, bool urlTypeSpecified) {
            this.getMasterUrlAsync(formId, urlType, urlTypeSpecified, null);
        }
        
        /// <remarks/>
        public void getMasterUrlAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, object userState) {
            if ((this.getMasterUrlOperationCompleted == null)) {
                this.getMasterUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMasterUrlOperationCompleted);
            }
            this.InvokeAsync("getMasterUrl", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified}, this.getMasterUrlOperationCompleted, userState);
        }
        
        private void OngetMasterUrlOperationCompleted(object arg) {
            if ((this.getMasterUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMasterUrlCompleted(this, new getMasterUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUniqueUrl([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email) {
            object[] results = this.Invoke("getUniqueUrl", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUrlAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string email) {
            this.getUniqueUrlAsync(formId, urlType, urlTypeSpecified, email, null);
        }
        
        /// <remarks/>
        public void getUniqueUrlAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string email, object userState) {
            if ((this.getUniqueUrlOperationCompleted == null)) {
                this.getUniqueUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUrlOperationCompleted);
            }
            this.InvokeAsync("getUniqueUrl", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        email}, this.getUniqueUrlOperationCompleted, userState);
        }
        
        private void OngetUniqueUrlOperationCompleted(object arg) {
            if ((this.getUniqueUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUrlCompleted(this, new getUniqueUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getUniqueUrls([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email) {
            object[] results = this.Invoke("getUniqueUrls", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        email});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUrlsAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string email) {
            this.getUniqueUrlsAsync(formId, urlType, urlTypeSpecified, email, null);
        }
        
        /// <remarks/>
        public void getUniqueUrlsAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string email, object userState) {
            if ((this.getUniqueUrlsOperationCompleted == null)) {
                this.getUniqueUrlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUrlsOperationCompleted);
            }
            this.InvokeAsync("getUniqueUrls", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        email}, this.getUniqueUrlsOperationCompleted, userState);
        }
        
        private void OngetUniqueUrlsOperationCompleted(object arg) {
            if ((this.getUniqueUrlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUrlsCompleted(this, new getUniqueUrlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailReminder[] getEmailReminders([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getEmailReminders", new object[] {
                        formId});
            return ((WSEmailReminder[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmailRemindersAsync(long formId) {
            this.getEmailRemindersAsync(formId, null);
        }
        
        /// <remarks/>
        public void getEmailRemindersAsync(long formId, object userState) {
            if ((this.getEmailRemindersOperationCompleted == null)) {
                this.getEmailRemindersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmailRemindersOperationCompleted);
            }
            this.InvokeAsync("getEmailReminders", new object[] {
                        formId}, this.getEmailRemindersOperationCompleted, userState);
        }
        
        private void OngetEmailRemindersOperationCompleted(object arg) {
            if ((this.getEmailRemindersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmailRemindersCompleted(this, new getEmailRemindersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long createEmailReminder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSEmailReminder reminder) {
            object[] results = this.Invoke("createEmailReminder", new object[] {
                        reminder});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void createEmailReminderAsync(WSEmailReminder reminder) {
            this.createEmailReminderAsync(reminder, null);
        }
        
        /// <remarks/>
        public void createEmailReminderAsync(WSEmailReminder reminder, object userState) {
            if ((this.createEmailReminderOperationCompleted == null)) {
                this.createEmailReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmailReminderOperationCompleted);
            }
            this.InvokeAsync("createEmailReminder", new object[] {
                        reminder}, this.createEmailReminderOperationCompleted, userState);
        }
        
        private void OncreateEmailReminderOperationCompleted(object arg) {
            if ((this.createEmailReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmailReminderCompleted(this, new createEmailReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailReminder updateEmailReminder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSEmailReminder reminder) {
            object[] results = this.Invoke("updateEmailReminder", new object[] {
                        reminder});
            return ((WSEmailReminder)(results[0]));
        }
        
        /// <remarks/>
        public void updateEmailReminderAsync(WSEmailReminder reminder) {
            this.updateEmailReminderAsync(reminder, null);
        }
        
        /// <remarks/>
        public void updateEmailReminderAsync(WSEmailReminder reminder, object userState) {
            if ((this.updateEmailReminderOperationCompleted == null)) {
                this.updateEmailReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmailReminderOperationCompleted);
            }
            this.InvokeAsync("updateEmailReminder", new object[] {
                        reminder}, this.updateEmailReminderOperationCompleted, userState);
        }
        
        private void OnupdateEmailReminderOperationCompleted(object arg) {
            if ((this.updateEmailReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmailReminderCompleted(this, new updateEmailReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailReminder getEmailReminder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long reminderId) {
            object[] results = this.Invoke("getEmailReminder", new object[] {
                        reminderId});
            return ((WSEmailReminder)(results[0]));
        }
        
        /// <remarks/>
        public void getEmailReminderAsync(long reminderId) {
            this.getEmailReminderAsync(reminderId, null);
        }
        
        /// <remarks/>
        public void getEmailReminderAsync(long reminderId, object userState) {
            if ((this.getEmailReminderOperationCompleted == null)) {
                this.getEmailReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmailReminderOperationCompleted);
            }
            this.InvokeAsync("getEmailReminder", new object[] {
                        reminderId}, this.getEmailReminderOperationCompleted, userState);
        }
        
        private void OngetEmailReminderOperationCompleted(object arg) {
            if ((this.getEmailReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmailReminderCompleted(this, new getEmailReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteEmailReminder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long reminderId) {
            this.Invoke("deleteEmailReminder", new object[] {
                        reminderId});
        }
        
        /// <remarks/>
        public void deleteEmailReminderAsync(long reminderId) {
            this.deleteEmailReminderAsync(reminderId, null);
        }
        
        /// <remarks/>
        public void deleteEmailReminderAsync(long reminderId, object userState) {
            if ((this.deleteEmailReminderOperationCompleted == null)) {
                this.deleteEmailReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmailReminderOperationCompleted);
            }
            this.InvokeAsync("deleteEmailReminder", new object[] {
                        reminderId}, this.deleteEmailReminderOperationCompleted, userState);
        }
        
        private void OndeleteEmailReminderOperationCompleted(object arg) {
            if ((this.deleteEmailReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmailReminderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAutofillData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uniqueUrl, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long answerId) {
            object[] results = this.Invoke("getAutofillData", new object[] {
                        formId,
                        uniqueUrl,
                        answerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAutofillDataAsync(long formId, string uniqueUrl, long answerId) {
            this.getAutofillDataAsync(formId, uniqueUrl, answerId, null);
        }
        
        /// <remarks/>
        public void getAutofillDataAsync(long formId, string uniqueUrl, long answerId, object userState) {
            if ((this.getAutofillDataOperationCompleted == null)) {
                this.getAutofillDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutofillDataOperationCompleted);
            }
            this.InvokeAsync("getAutofillData", new object[] {
                        formId,
                        uniqueUrl,
                        answerId}, this.getAutofillDataOperationCompleted, userState);
        }
        
        private void OngetAutofillDataOperationCompleted(object arg) {
            if ((this.getAutofillDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutofillDataCompleted(this, new getAutofillDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSFormEmailTemplate setFormEmailTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSFormEmailTemplate template) {
            object[] results = this.Invoke("setFormEmailTemplate", new object[] {
                        template});
            return ((WSFormEmailTemplate)(results[0]));
        }
        
        /// <remarks/>
        public void setFormEmailTemplateAsync(WSFormEmailTemplate template) {
            this.setFormEmailTemplateAsync(template, null);
        }
        
        /// <remarks/>
        public void setFormEmailTemplateAsync(WSFormEmailTemplate template, object userState) {
            if ((this.setFormEmailTemplateOperationCompleted == null)) {
                this.setFormEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFormEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("setFormEmailTemplate", new object[] {
                        template}, this.setFormEmailTemplateOperationCompleted, userState);
        }
        
        private void OnsetFormEmailTemplateOperationCompleted(object arg) {
            if ((this.setFormEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFormEmailTemplateCompleted(this, new setFormEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSFormEmailTemplate getFormEmailTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getFormEmailTemplate", new object[] {
                        formId});
            return ((WSFormEmailTemplate)(results[0]));
        }
        
        /// <remarks/>
        public void getFormEmailTemplateAsync(long formId) {
            this.getFormEmailTemplateAsync(formId, null);
        }
        
        /// <remarks/>
        public void getFormEmailTemplateAsync(long formId, object userState) {
            if ((this.getFormEmailTemplateOperationCompleted == null)) {
                this.getFormEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("getFormEmailTemplate", new object[] {
                        formId}, this.getFormEmailTemplateOperationCompleted, userState);
        }
        
        private void OngetFormEmailTemplateOperationCompleted(object arg) {
            if ((this.getFormEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormEmailTemplateCompleted(this, new getFormEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendUniqueUrlByEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute("emailList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] emailList) {
            this.Invoke("sendUniqueUrlByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        emailList});
        }
        
        /// <remarks/>
        public void sendUniqueUrlByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string[] emailList) {
            this.sendUniqueUrlByEmailAsync(formId, urlType, urlTypeSpecified, emailList, null);
        }
        
        /// <remarks/>
        public void sendUniqueUrlByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string[] emailList, object userState) {
            if ((this.sendUniqueUrlByEmailOperationCompleted == null)) {
                this.sendUniqueUrlByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendUniqueUrlByEmailOperationCompleted);
            }
            this.InvokeAsync("sendUniqueUrlByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        emailList}, this.sendUniqueUrlByEmailOperationCompleted, userState);
        }
        
        private void OnsendUniqueUrlByEmailOperationCompleted(object arg) {
            if ((this.sendUniqueUrlByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendUniqueUrlByEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDefaultUrlType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified) {
            this.Invoke("setDefaultUrlType", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified});
        }
        
        /// <remarks/>
        public void setDefaultUrlTypeAsync(long formId, WSUrlType urlType, bool urlTypeSpecified) {
            this.setDefaultUrlTypeAsync(formId, urlType, urlTypeSpecified, null);
        }
        
        /// <remarks/>
        public void setDefaultUrlTypeAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, object userState) {
            if ((this.setDefaultUrlTypeOperationCompleted == null)) {
                this.setDefaultUrlTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDefaultUrlTypeOperationCompleted);
            }
            this.InvokeAsync("setDefaultUrlType", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified}, this.setDefaultUrlTypeOperationCompleted, userState);
        }
        
        private void OnsetDefaultUrlTypeOperationCompleted(object arg) {
            if ((this.setDefaultUrlTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDefaultUrlTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getDefaultUrlType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out WSUrlType @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getDefaultUrlType", new object[] {
                        formId});
            @return = ((WSUrlType)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getDefaultUrlTypeAsync(long formId) {
            this.getDefaultUrlTypeAsync(formId, null);
        }
        
        /// <remarks/>
        public void getDefaultUrlTypeAsync(long formId, object userState) {
            if ((this.getDefaultUrlTypeOperationCompleted == null)) {
                this.getDefaultUrlTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultUrlTypeOperationCompleted);
            }
            this.InvokeAsync("getDefaultUrlType", new object[] {
                        formId}, this.getDefaultUrlTypeOperationCompleted, userState);
        }
        
        private void OngetDefaultUrlTypeOperationCompleted(object arg) {
            if ((this.getDefaultUrlTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultUrlTypeCompleted(this, new getDefaultUrlTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSUniqueUrlSendingStatus getUniqueUrlSendingStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getUniqueUrlSendingStatus", new object[] {
                        formId});
            return ((WSUniqueUrlSendingStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUrlSendingStatusAsync(long formId) {
            this.getUniqueUrlSendingStatusAsync(formId, null);
        }
        
        /// <remarks/>
        public void getUniqueUrlSendingStatusAsync(long formId, object userState) {
            if ((this.getUniqueUrlSendingStatusOperationCompleted == null)) {
                this.getUniqueUrlSendingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUrlSendingStatusOperationCompleted);
            }
            this.InvokeAsync("getUniqueUrlSendingStatus", new object[] {
                        formId}, this.getUniqueUrlSendingStatusOperationCompleted, userState);
        }
        
        private void OngetUniqueUrlSendingStatusOperationCompleted(object arg) {
            if ((this.getUniqueUrlSendingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUrlSendingStatusCompleted(this, new getUniqueUrlSendingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getIncompleteEmails([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getIncompleteEmails", new object[] {
                        formId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getIncompleteEmailsAsync(long formId) {
            this.getIncompleteEmailsAsync(formId, null);
        }
        
        /// <remarks/>
        public void getIncompleteEmailsAsync(long formId, object userState) {
            if ((this.getIncompleteEmailsOperationCompleted == null)) {
                this.getIncompleteEmailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIncompleteEmailsOperationCompleted);
            }
            this.InvokeAsync("getIncompleteEmails", new object[] {
                        formId}, this.getIncompleteEmailsOperationCompleted, userState);
        }
        
        private void OngetIncompleteEmailsOperationCompleted(object arg) {
            if ((this.getIncompleteEmailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIncompleteEmailsCompleted(this, new getIncompleteEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailLink[] getUniqueUrlByEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute("emailList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] emailList) {
            object[] results = this.Invoke("getUniqueUrlByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        emailList});
            return ((WSEmailLink[])(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUrlByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string[] emailList) {
            this.getUniqueUrlByEmailAsync(formId, urlType, urlTypeSpecified, emailList, null);
        }
        
        /// <remarks/>
        public void getUniqueUrlByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, string[] emailList, object userState) {
            if ((this.getUniqueUrlByEmailOperationCompleted == null)) {
                this.getUniqueUrlByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUrlByEmailOperationCompleted);
            }
            this.InvokeAsync("getUniqueUrlByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        emailList}, this.getUniqueUrlByEmailOperationCompleted, userState);
        }
        
        private void OngetUniqueUrlByEmailOperationCompleted(object arg) {
            if ((this.getUniqueUrlByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUrlByEmailCompleted(this, new getUniqueUrlByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void publishOnParticipantPortal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long filterId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified) {
            this.Invoke("publishOnParticipantPortal", new object[] {
                        formId,
                        cmId,
                        filterId,
                        filterIdSpecified});
        }
        
        /// <remarks/>
        public void publishOnParticipantPortalAsync(long formId, long cmId, long filterId, bool filterIdSpecified) {
            this.publishOnParticipantPortalAsync(formId, cmId, filterId, filterIdSpecified, null);
        }
        
        /// <remarks/>
        public void publishOnParticipantPortalAsync(long formId, long cmId, long filterId, bool filterIdSpecified, object userState) {
            if ((this.publishOnParticipantPortalOperationCompleted == null)) {
                this.publishOnParticipantPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpublishOnParticipantPortalOperationCompleted);
            }
            this.InvokeAsync("publishOnParticipantPortal", new object[] {
                        formId,
                        cmId,
                        filterId,
                        filterIdSpecified}, this.publishOnParticipantPortalOperationCompleted, userState);
        }
        
        private void OnpublishOnParticipantPortalOperationCompleted(object arg) {
            if ((this.publishOnParticipantPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.publishOnParticipantPortalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setPortalResponseSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] wsEditResponseSettings settings) {
            this.Invoke("setPortalResponseSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void setPortalResponseSettingsAsync(wsEditResponseSettings settings) {
            this.setPortalResponseSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void setPortalResponseSettingsAsync(wsEditResponseSettings settings, object userState) {
            if ((this.setPortalResponseSettingsOperationCompleted == null)) {
                this.setPortalResponseSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPortalResponseSettingsOperationCompleted);
            }
            this.InvokeAsync("setPortalResponseSettings", new object[] {
                        settings}, this.setPortalResponseSettingsOperationCompleted, userState);
        }
        
        private void OnsetPortalResponseSettingsOperationCompleted(object arg) {
            if ((this.setPortalResponseSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPortalResponseSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public wsEditResponseSettings getPortalResponseSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long settings, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool settingsSpecified) {
            object[] results = this.Invoke("getPortalResponseSettings", new object[] {
                        settings,
                        settingsSpecified});
            return ((wsEditResponseSettings)(results[0]));
        }
        
        /// <remarks/>
        public void getPortalResponseSettingsAsync(long settings, bool settingsSpecified) {
            this.getPortalResponseSettingsAsync(settings, settingsSpecified, null);
        }
        
        /// <remarks/>
        public void getPortalResponseSettingsAsync(long settings, bool settingsSpecified, object userState) {
            if ((this.getPortalResponseSettingsOperationCompleted == null)) {
                this.getPortalResponseSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPortalResponseSettingsOperationCompleted);
            }
            this.InvokeAsync("getPortalResponseSettings", new object[] {
                        settings,
                        settingsSpecified}, this.getPortalResponseSettingsOperationCompleted, userState);
        }
        
        private void OngetPortalResponseSettingsOperationCompleted(object arg) {
            if ((this.getPortalResponseSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPortalResponseSettingsCompleted(this, new getPortalResponseSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDataFlowSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSDataFlow dataFlow) {
            this.Invoke("setDataFlowSettings", new object[] {
                        dataFlow});
        }
        
        /// <remarks/>
        public void setDataFlowSettingsAsync(WSDataFlow dataFlow) {
            this.setDataFlowSettingsAsync(dataFlow, null);
        }
        
        /// <remarks/>
        public void setDataFlowSettingsAsync(WSDataFlow dataFlow, object userState) {
            if ((this.setDataFlowSettingsOperationCompleted == null)) {
                this.setDataFlowSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDataFlowSettingsOperationCompleted);
            }
            this.InvokeAsync("setDataFlowSettings", new object[] {
                        dataFlow}, this.setDataFlowSettingsOperationCompleted, userState);
        }
        
        private void OnsetDataFlowSettingsOperationCompleted(object arg) {
            if ((this.setDataFlowSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDataFlowSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSDataFlow getDataFlowSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified) {
            object[] results = this.Invoke("getDataFlowSettings", new object[] {
                        formId,
                        formIdSpecified});
            return ((WSDataFlow)(results[0]));
        }
        
        /// <remarks/>
        public void getDataFlowSettingsAsync(long formId, bool formIdSpecified) {
            this.getDataFlowSettingsAsync(formId, formIdSpecified, null);
        }
        
        /// <remarks/>
        public void getDataFlowSettingsAsync(long formId, bool formIdSpecified, object userState) {
            if ((this.getDataFlowSettingsOperationCompleted == null)) {
                this.getDataFlowSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataFlowSettingsOperationCompleted);
            }
            this.InvokeAsync("getDataFlowSettings", new object[] {
                        formId,
                        formIdSpecified}, this.getDataFlowSettingsOperationCompleted, userState);
        }
        
        private void OngetDataFlowSettingsOperationCompleted(object arg) {
            if ((this.getDataFlowSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataFlowSettingsCompleted(this, new getDataFlowSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFormVisibilityOnPortal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSPortalVisibility portalVisibility) {
            this.Invoke("setFormVisibilityOnPortal", new object[] {
                        portalVisibility});
        }
        
        /// <remarks/>
        public void setFormVisibilityOnPortalAsync(WSPortalVisibility portalVisibility) {
            this.setFormVisibilityOnPortalAsync(portalVisibility, null);
        }
        
        /// <remarks/>
        public void setFormVisibilityOnPortalAsync(WSPortalVisibility portalVisibility, object userState) {
            if ((this.setFormVisibilityOnPortalOperationCompleted == null)) {
                this.setFormVisibilityOnPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFormVisibilityOnPortalOperationCompleted);
            }
            this.InvokeAsync("setFormVisibilityOnPortal", new object[] {
                        portalVisibility}, this.setFormVisibilityOnPortalOperationCompleted, userState);
        }
        
        private void OnsetFormVisibilityOnPortalOperationCompleted(object arg) {
            if ((this.setFormVisibilityOnPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFormVisibilityOnPortalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSPortalVisibility getFormVisibilityOnPortal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getFormVisibilityOnPortal", new object[] {
                        formId});
            return ((WSPortalVisibility)(results[0]));
        }
        
        /// <remarks/>
        public void getFormVisibilityOnPortalAsync(long formId) {
            this.getFormVisibilityOnPortalAsync(formId, null);
        }
        
        /// <remarks/>
        public void getFormVisibilityOnPortalAsync(long formId, object userState) {
            if ((this.getFormVisibilityOnPortalOperationCompleted == null)) {
                this.getFormVisibilityOnPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormVisibilityOnPortalOperationCompleted);
            }
            this.InvokeAsync("getFormVisibilityOnPortal", new object[] {
                        formId}, this.getFormVisibilityOnPortalOperationCompleted, userState);
        }
        
        private void OngetFormVisibilityOnPortalOperationCompleted(object arg) {
            if ((this.getFormVisibilityOnPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormVisibilityOnPortalCompleted(this, new getFormVisibilityOnPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendUniqueURLsToCMList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cmIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long filterId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified) {
            this.Invoke("sendUniqueURLsToCMList", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filterId,
                        filterIdSpecified});
        }
        
        /// <remarks/>
        public void sendUniqueURLsToCMListAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, long filterId, bool filterIdSpecified) {
            this.sendUniqueURLsToCMListAsync(formId, formIdSpecified, cmId, cmIdSpecified, filterId, filterIdSpecified, null);
        }
        
        /// <remarks/>
        public void sendUniqueURLsToCMListAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, long filterId, bool filterIdSpecified, object userState) {
            if ((this.sendUniqueURLsToCMListOperationCompleted == null)) {
                this.sendUniqueURLsToCMListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendUniqueURLsToCMListOperationCompleted);
            }
            this.InvokeAsync("sendUniqueURLsToCMList", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filterId,
                        filterIdSpecified}, this.sendUniqueURLsToCMListOperationCompleted, userState);
        }
        
        private void OnsendUniqueURLsToCMListOperationCompleted(object arg) {
            if ((this.sendUniqueURLsToCMListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendUniqueURLsToCMListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool lockAccessToContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long contactId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool contactIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool locked, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool lockedSpecified) {
            object[] results = this.Invoke("lockAccessToContact", new object[] {
                        formId,
                        formIdSpecified,
                        contactId,
                        contactIdSpecified,
                        locked,
                        lockedSpecified});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void lockAccessToContactAsync(long formId, bool formIdSpecified, long contactId, bool contactIdSpecified, bool locked, bool lockedSpecified) {
            this.lockAccessToContactAsync(formId, formIdSpecified, contactId, contactIdSpecified, locked, lockedSpecified, null);
        }
        
        /// <remarks/>
        public void lockAccessToContactAsync(long formId, bool formIdSpecified, long contactId, bool contactIdSpecified, bool locked, bool lockedSpecified, object userState) {
            if ((this.lockAccessToContactOperationCompleted == null)) {
                this.lockAccessToContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlockAccessToContactOperationCompleted);
            }
            this.InvokeAsync("lockAccessToContact", new object[] {
                        formId,
                        formIdSpecified,
                        contactId,
                        contactIdSpecified,
                        locked,
                        lockedSpecified}, this.lockAccessToContactOperationCompleted, userState);
        }
        
        private void OnlockAccessToContactOperationCompleted(object arg) {
            if ((this.lockAccessToContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lockAccessToContactCompleted(this, new lockAccessToContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isFormPublishedToPortal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cmIdSpecified) {
            object[] results = this.Invoke("isFormPublishedToPortal", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isFormPublishedToPortalAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified) {
            this.isFormPublishedToPortalAsync(formId, formIdSpecified, cmId, cmIdSpecified, null);
        }
        
        /// <remarks/>
        public void isFormPublishedToPortalAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, object userState) {
            if ((this.isFormPublishedToPortalOperationCompleted == null)) {
                this.isFormPublishedToPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisFormPublishedToPortalOperationCompleted);
            }
            this.InvokeAsync("isFormPublishedToPortal", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified}, this.isFormPublishedToPortalOperationCompleted, userState);
        }
        
        private void OnisFormPublishedToPortalOperationCompleted(object arg) {
            if ((this.isFormPublishedToPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isFormPublishedToPortalCompleted(this, new isFormPublishedToPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailLink getVotingLink([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
            object[] results = this.Invoke("getVotingLink", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified});
            return ((WSEmailLink)(results[0]));
        }
        
        /// <remarks/>
        public void getVotingLinkAsync(long arg0, bool arg0Specified, WSUrlType arg1, bool arg1Specified) {
            this.getVotingLinkAsync(arg0, arg0Specified, arg1, arg1Specified, null);
        }
        
        /// <remarks/>
        public void getVotingLinkAsync(long arg0, bool arg0Specified, WSUrlType arg1, bool arg1Specified, object userState) {
            if ((this.getVotingLinkOperationCompleted == null)) {
                this.getVotingLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVotingLinkOperationCompleted);
            }
            this.InvokeAsync("getVotingLink", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified}, this.getVotingLinkOperationCompleted, userState);
        }
        
        private void OngetVotingLinkOperationCompleted(object arg) {
            if ((this.getVotingLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVotingLinkCompleted(this, new getVotingLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendUniqueUrlWithAutofillByEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute("autofillDataList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSAutofillData[] autofillDataList) {
            this.Invoke("sendUniqueUrlWithAutofillByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        autofillDataList});
        }
        
        /// <remarks/>
        public void sendUniqueUrlWithAutofillByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, WSAutofillData[] autofillDataList) {
            this.sendUniqueUrlWithAutofillByEmailAsync(formId, urlType, urlTypeSpecified, autofillDataList, null);
        }
        
        /// <remarks/>
        public void sendUniqueUrlWithAutofillByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, WSAutofillData[] autofillDataList, object userState) {
            if ((this.sendUniqueUrlWithAutofillByEmailOperationCompleted == null)) {
                this.sendUniqueUrlWithAutofillByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendUniqueUrlWithAutofillByEmailOperationCompleted);
            }
            this.InvokeAsync("sendUniqueUrlWithAutofillByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        autofillDataList}, this.sendUniqueUrlWithAutofillByEmailOperationCompleted, userState);
        }
        
        private void OnsendUniqueUrlWithAutofillByEmailOperationCompleted(object arg) {
            if ((this.sendUniqueUrlWithAutofillByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendUniqueUrlWithAutofillByEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSEmailLink[] getUniqueUrlWithAutofillByEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSUrlType urlType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool urlTypeSpecified, [System.Xml.Serialization.XmlElementAttribute("autofillDataList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSAutofillData[] autofillDataList) {
            object[] results = this.Invoke("getUniqueUrlWithAutofillByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        autofillDataList});
            return ((WSEmailLink[])(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUrlWithAutofillByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, WSAutofillData[] autofillDataList) {
            this.getUniqueUrlWithAutofillByEmailAsync(formId, urlType, urlTypeSpecified, autofillDataList, null);
        }
        
        /// <remarks/>
        public void getUniqueUrlWithAutofillByEmailAsync(long formId, WSUrlType urlType, bool urlTypeSpecified, WSAutofillData[] autofillDataList, object userState) {
            if ((this.getUniqueUrlWithAutofillByEmailOperationCompleted == null)) {
                this.getUniqueUrlWithAutofillByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUrlWithAutofillByEmailOperationCompleted);
            }
            this.InvokeAsync("getUniqueUrlWithAutofillByEmail", new object[] {
                        formId,
                        urlType,
                        urlTypeSpecified,
                        autofillDataList}, this.getUniqueUrlWithAutofillByEmailOperationCompleted, userState);
        }
        
        private void OngetUniqueUrlWithAutofillByEmailOperationCompleted(object arg) {
            if ((this.getUniqueUrlWithAutofillByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUrlWithAutofillByEmailCompleted(this, new getUniqueUrlWithAutofillByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSResponse passwordProtectWithAutofill([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute("autofillDataList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSAutofillData[] autofillDataList) {
            object[] results = this.Invoke("passwordProtectWithAutofill", new object[] {
                        formId,
                        autofillDataList});
            return ((WSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void passwordProtectWithAutofillAsync(long formId, WSAutofillData[] autofillDataList) {
            this.passwordProtectWithAutofillAsync(formId, autofillDataList, null);
        }
        
        /// <remarks/>
        public void passwordProtectWithAutofillAsync(long formId, WSAutofillData[] autofillDataList, object userState) {
            if ((this.passwordProtectWithAutofillOperationCompleted == null)) {
                this.passwordProtectWithAutofillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpasswordProtectWithAutofillOperationCompleted);
            }
            this.InvokeAsync("passwordProtectWithAutofill", new object[] {
                        formId,
                        autofillDataList}, this.passwordProtectWithAutofillOperationCompleted, userState);
        }
        
        private void OnpasswordProtectWithAutofillOperationCompleted(object arg) {
            if ((this.passwordProtectWithAutofillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passwordProtectWithAutofillCompleted(this, new passwordProtectWithAutofillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void publishOnParticipantPortalWithNewFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSModelObjectFilter filter) {
            this.Invoke("publishOnParticipantPortalWithNewFilter", new object[] {
                        formId,
                        cmId,
                        filter});
        }
        
        /// <remarks/>
        public void publishOnParticipantPortalWithNewFilterAsync(long formId, long cmId, WSModelObjectFilter filter) {
            this.publishOnParticipantPortalWithNewFilterAsync(formId, cmId, filter, null);
        }
        
        /// <remarks/>
        public void publishOnParticipantPortalWithNewFilterAsync(long formId, long cmId, WSModelObjectFilter filter, object userState) {
            if ((this.publishOnParticipantPortalWithNewFilterOperationCompleted == null)) {
                this.publishOnParticipantPortalWithNewFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpublishOnParticipantPortalWithNewFilterOperationCompleted);
            }
            this.InvokeAsync("publishOnParticipantPortalWithNewFilter", new object[] {
                        formId,
                        cmId,
                        filter}, this.publishOnParticipantPortalWithNewFilterOperationCompleted, userState);
        }
        
        private void OnpublishOnParticipantPortalWithNewFilterOperationCompleted(object arg) {
            if ((this.publishOnParticipantPortalWithNewFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.publishOnParticipantPortalWithNewFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendUniqueURLsToCMListForNewFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cmIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSModelObjectFilter filter) {
            this.Invoke("sendUniqueURLsToCMListForNewFilter", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filter});
        }
        
        /// <remarks/>
        public void sendUniqueURLsToCMListForNewFilterAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, WSModelObjectFilter filter) {
            this.sendUniqueURLsToCMListForNewFilterAsync(formId, formIdSpecified, cmId, cmIdSpecified, filter, null);
        }
        
        /// <remarks/>
        public void sendUniqueURLsToCMListForNewFilterAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, WSModelObjectFilter filter, object userState) {
            if ((this.sendUniqueURLsToCMListForNewFilterOperationCompleted == null)) {
                this.sendUniqueURLsToCMListForNewFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendUniqueURLsToCMListForNewFilterOperationCompleted);
            }
            this.InvokeAsync("sendUniqueURLsToCMListForNewFilter", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filter}, this.sendUniqueURLsToCMListForNewFilterOperationCompleted, userState);
        }
        
        private void OnsendUniqueURLsToCMListForNewFilterOperationCompleted(object arg) {
            if ((this.sendUniqueURLsToCMListForNewFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendUniqueURLsToCMListForNewFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void passwordProtectionThroughContactManager([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cmIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long filterId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified) {
            this.Invoke("passwordProtectionThroughContactManager", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filterId,
                        filterIdSpecified});
        }
        
        /// <remarks/>
        public void passwordProtectionThroughContactManagerAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, long filterId, bool filterIdSpecified) {
            this.passwordProtectionThroughContactManagerAsync(formId, formIdSpecified, cmId, cmIdSpecified, filterId, filterIdSpecified, null);
        }
        
        /// <remarks/>
        public void passwordProtectionThroughContactManagerAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, long filterId, bool filterIdSpecified, object userState) {
            if ((this.passwordProtectionThroughContactManagerOperationCompleted == null)) {
                this.passwordProtectionThroughContactManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpasswordProtectionThroughContactManagerOperationCompleted);
            }
            this.InvokeAsync("passwordProtectionThroughContactManager", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filterId,
                        filterIdSpecified}, this.passwordProtectionThroughContactManagerOperationCompleted, userState);
        }
        
        private void OnpasswordProtectionThroughContactManagerOperationCompleted(object arg) {
            if ((this.passwordProtectionThroughContactManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passwordProtectionThroughContactManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void passwordProtectionThroughContactManagerForNewFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool formIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long cmId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cmIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSModelObjectFilter filter) {
            this.Invoke("passwordProtectionThroughContactManagerForNewFilter", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filter});
        }
        
        /// <remarks/>
        public void passwordProtectionThroughContactManagerForNewFilterAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, WSModelObjectFilter filter) {
            this.passwordProtectionThroughContactManagerForNewFilterAsync(formId, formIdSpecified, cmId, cmIdSpecified, filter, null);
        }
        
        /// <remarks/>
        public void passwordProtectionThroughContactManagerForNewFilterAsync(long formId, bool formIdSpecified, long cmId, bool cmIdSpecified, WSModelObjectFilter filter, object userState) {
            if ((this.passwordProtectionThroughContactManagerForNewFilterOperationCompleted == null)) {
                this.passwordProtectionThroughContactManagerForNewFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpasswordProtectionThroughContactManagerForNewFilterOperationCompleted);
            }
            this.InvokeAsync("passwordProtectionThroughContactManagerForNewFilter", new object[] {
                        formId,
                        formIdSpecified,
                        cmId,
                        cmIdSpecified,
                        filter}, this.passwordProtectionThroughContactManagerForNewFilterOperationCompleted, userState);
        }
        
        private void OnpasswordProtectionThroughContactManagerForNewFilterOperationCompleted(object arg) {
            if ((this.passwordProtectionThroughContactManagerForNewFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passwordProtectionThroughContactManagerForNewFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSFormTag setFormTag([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] WSFormTag formTag) {
            object[] results = this.Invoke("setFormTag", new object[] {
                        formTag});
            return ((WSFormTag)(results[0]));
        }
        
        /// <remarks/>
        public void setFormTagAsync(WSFormTag formTag) {
            this.setFormTagAsync(formTag, null);
        }
        
        /// <remarks/>
        public void setFormTagAsync(WSFormTag formTag, object userState) {
            if ((this.setFormTagOperationCompleted == null)) {
                this.setFormTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFormTagOperationCompleted);
            }
            this.InvokeAsync("setFormTag", new object[] {
                        formTag}, this.setFormTagOperationCompleted, userState);
        }
        
        private void OnsetFormTagOperationCompleted(object arg) {
            if ((this.setFormTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFormTagCompleted(this, new setFormTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://launch.v81.api.keysurvey.com", ResponseNamespace="http://launch.v81.api.keysurvey.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSFormTag getFormTag([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long formId) {
            object[] results = this.Invoke("getFormTag", new object[] {
                        formId});
            return ((WSFormTag)(results[0]));
        }
        
        /// <remarks/>
        public void getFormTagAsync(long formId) {
            this.getFormTagAsync(formId, null);
        }
        
        /// <remarks/>
        public void getFormTagAsync(long formId, object userState) {
            if ((this.getFormTagOperationCompleted == null)) {
                this.getFormTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormTagOperationCompleted);
            }
            this.InvokeAsync("getFormTag", new object[] {
                        formId}, this.getFormTagOperationCompleted, userState);
        }
        
        private void OngetFormTagOperationCompleted(object arg) {
            if ((this.getFormTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormTagCompleted(this, new getFormTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public enum WSUrlType {
        
        /// <remarks/>
        REGULAR,
        
        /// <remarks/>
        SECURE,
        
        /// <remarks/>
        IP_ADDRESS,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSRelativeEmailReminder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSAbsoluteEmailReminder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public abstract partial class WSEmailReminder : WSObject {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long accountId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSFileAttachment[] attachments;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastSentDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastSentDateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailBody;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mailConfirmReceipt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailFrom;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mailIsHighPriority;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailReplyTo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailSubject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailUndeliveredTo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long reminderId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long reminderNumber;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSFileAttachment : WSObject {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] attachment;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSFileAttachment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSEmailReminder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSRelativeEmailReminder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSAbsoluteEmailReminder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v81.api.keysurvey.com")]
    public partial class WSObject {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long versionId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSQuestionTag {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autofilled;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hidden;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long questionId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool readOnlyAutofill;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSFormTag {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool frozen;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("questionTags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSQuestionTag[] questionTags;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSModelObjectFilterCondition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public wsFilterCondition condition;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fieldName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] values;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public enum wsFilterCondition {
        
        /// <remarks/>
        NOT_EQUAL,
        
        /// <remarks/>
        EQUAL,
        
        /// <remarks/>
        CONTAINS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSModelObjectFilter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("filters", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSModelObjectFilterCondition[] filters;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string logicalCondition;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v81.api.keysurvey.com")]
    public partial class WSResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] errors;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool success;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSAutofillDataItem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("answers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] answers;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long questionId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSAutofillData {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("items", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSAutofillDataItem[] items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSPortalVisibility {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formIdSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime startHideDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startHideDateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime startShowDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startShowDateSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSDataFlowSetting {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cmFieldReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WSDataFlowDirection direction;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string formFieldReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool overrideWithEmptyValues;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public enum WSDataFlowDirection {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        FROM_SURVEY_TO_CM,
        
        /// <remarks/>
        FROM_CM_TO_SURVEY,
        
        /// <remarks/>
        BIDIRECTIONAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSDataFlow {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long contactManagerId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contactManagerIdSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formIdSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("settings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSDataFlowSetting[] settings;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class wsEditResponseSettings {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCopy;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowDelete;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowEdit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowMultiple;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSEmailLink {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string link;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSUniqueUrlSendingStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int percentsComplete;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long secondsElapsed;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSFormEmailTemplate {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WSFileAttachment[] attachments;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long formId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string from;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string replyTo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string undeliveredTo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSRelativeEmailReminder : WSEmailReminder {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberOfDays;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://launch.v81.api.keysurvey.com")]
    public partial class WSAbsoluteEmailReminder : WSEmailReminder {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime appointedDate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getMasterUrlCompletedEventHandler(object sender, getMasterUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMasterUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMasterUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUniqueUrlCompletedEventHandler(object sender, getUniqueUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUniqueUrlsCompletedEventHandler(object sender, getUniqueUrlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUrlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUrlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getEmailRemindersCompletedEventHandler(object sender, getEmailRemindersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmailRemindersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmailRemindersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailReminder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailReminder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void createEmailReminderCompletedEventHandler(object sender, createEmailReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmailReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmailReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void updateEmailReminderCompletedEventHandler(object sender, updateEmailReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEmailReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateEmailReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailReminder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailReminder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getEmailReminderCompletedEventHandler(object sender, getEmailReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmailReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmailReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailReminder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailReminder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void deleteEmailReminderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getAutofillDataCompletedEventHandler(object sender, getAutofillDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutofillDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutofillDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setFormEmailTemplateCompletedEventHandler(object sender, setFormEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFormEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFormEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSFormEmailTemplate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSFormEmailTemplate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getFormEmailTemplateCompletedEventHandler(object sender, getFormEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSFormEmailTemplate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSFormEmailTemplate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void sendUniqueUrlByEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setDefaultUrlTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getDefaultUrlTypeCompletedEventHandler(object sender, getDefaultUrlTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultUrlTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultUrlTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSUrlType @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSUrlType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUniqueUrlSendingStatusCompletedEventHandler(object sender, getUniqueUrlSendingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUrlSendingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUrlSendingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSUniqueUrlSendingStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSUniqueUrlSendingStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getIncompleteEmailsCompletedEventHandler(object sender, getIncompleteEmailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIncompleteEmailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIncompleteEmailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUniqueUrlByEmailCompletedEventHandler(object sender, getUniqueUrlByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUrlByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUrlByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailLink[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailLink[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void publishOnParticipantPortalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setPortalResponseSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getPortalResponseSettingsCompletedEventHandler(object sender, getPortalResponseSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPortalResponseSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPortalResponseSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public wsEditResponseSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((wsEditResponseSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setDataFlowSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getDataFlowSettingsCompletedEventHandler(object sender, getDataFlowSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataFlowSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataFlowSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSDataFlow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSDataFlow)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setFormVisibilityOnPortalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getFormVisibilityOnPortalCompletedEventHandler(object sender, getFormVisibilityOnPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormVisibilityOnPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormVisibilityOnPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSPortalVisibility Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSPortalVisibility)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void sendUniqueURLsToCMListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void lockAccessToContactCompletedEventHandler(object sender, lockAccessToContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lockAccessToContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lockAccessToContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void isFormPublishedToPortalCompletedEventHandler(object sender, isFormPublishedToPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isFormPublishedToPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isFormPublishedToPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getVotingLinkCompletedEventHandler(object sender, getVotingLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVotingLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVotingLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailLink Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailLink)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void sendUniqueUrlWithAutofillByEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUniqueUrlWithAutofillByEmailCompletedEventHandler(object sender, getUniqueUrlWithAutofillByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUrlWithAutofillByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUrlWithAutofillByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSEmailLink[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSEmailLink[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void passwordProtectWithAutofillCompletedEventHandler(object sender, passwordProtectWithAutofillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class passwordProtectWithAutofillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal passwordProtectWithAutofillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void publishOnParticipantPortalWithNewFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void sendUniqueURLsToCMListForNewFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void passwordProtectionThroughContactManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void passwordProtectionThroughContactManagerForNewFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setFormTagCompletedEventHandler(object sender, setFormTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFormTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFormTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSFormTag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSFormTag)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getFormTagCompletedEventHandler(object sender, getFormTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSFormTag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSFormTag)(this.results[0]));
            }
        }
    }
}
